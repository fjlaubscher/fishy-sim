/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _helpers = __webpack_require__(1);

	var _Animal = __webpack_require__(2);

	var _Animal2 = _interopRequireDefault(_Animal);

	var _FoodSource = __webpack_require__(4);

	var _FoodSource2 = _interopRequireDefault(_FoodSource);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var fishArray = null;
	var foodSources = null;
	var shark = null;

	document.addEventListener('DOMContentLoaded', start);

	function start() {
		var canvas = document.getElementById('canvas');
		canvas.width = window.innerWidth;
		canvas.height = window.innerHeight;
		var context = canvas.getContext('2d');

		var maxFish = (0, _helpers.random)(20, 100);
		var maxFood = (0, _helpers.random)(5, 20);

		fishArray = [];
		foodSources = [];
		shark = new _Animal2.default(canvas, (0, _helpers.random)(0, canvas.width - _helpers.SHARK_WIDTH), (0, _helpers.random)(0, canvas.height - _helpers.SHARK_HEIGHT), _helpers.SHARK_WIDTH, _helpers.SHARK_HEIGHT);

		// draw fish
		for (var i = 0; i < maxFish; i++) {
			var fish = new _Animal2.default(canvas, (0, _helpers.random)(0, canvas.width - _helpers.FISH_WIDTH), (0, _helpers.random)(0, canvas.height - _helpers.FISH_HEIGHT), _helpers.FISH_WIDTH, _helpers.FISH_HEIGHT);
			fishArray.push(fish);
			fish.draw(context, _helpers.FISH_COLOR);
		}

		for (var j = 0; j < maxFood; j++) {
			var food = new _FoodSource2.default((0, _helpers.random)(0, canvas.width - _helpers.FOODSOURCE_WIDTH), (0, _helpers.random)(0, canvas.height - _helpers.FOODSOURCE_HEIGHT), _helpers.FOODSOURCE_WIDTH, _helpers.FOODSOURCE_HEIGHT, (0, _helpers.random)(200, 1000));
			foodSources.push(food);
			food.draw(context, _helpers.FOODSOURCE_COLOR);
		}

		window.setInterval(tmrTick, 40);
	}

	// timer tick event
	function tmrTick() {
		var canvas = document.getElementById('canvas');
		var context = canvas.getContext('2d');
		context.clearRect(0, 0, canvas.width, canvas.height);

		// move and draw shark
		shark.move();
		shark.draw(context, _helpers.SHARK_COLOR);

		// draw foodsources
		for (var a = 0; a < foodSources.length; a++) {
			if (foodSources[a].energy > 0) {
				foodSources[a].draw(context, _helpers.FOODSOURCE_COLOR);
			} else {
				// dead
				foodSources[a].draw(context, '#000000');
			}
		}

		// move and draw fish
		for (var i = 0; i < fishArray.length; i++) {
			if (fishArray[i].energy > 0) {

				if (shark.position.intersectsWith(fishArray[i].position) && shark.energy < 1000) {
					shark.energy += fishArray[i].energy;
					fishArray[i].energy = 0;
				} else {
					fishArray[i].move();
					fishArray[i].draw(context, _helpers.FISH_COLOR);

					// basic schooling
					for (var j = 0; j < fishArray.length; j++) {
						if (fishArray[i].position.intersectsWith(fishArray[j].position)) {
							fishArray[j].setAngle(fishArray[i].movementAngle);
						}
					}

					// feed
					for (var k = 0; k < foodSources.length; k++) {
						if (fishArray[i].position.intersectsWith(foodSources[k].position) && fishArray[i].energy < 100) {
							fishArray[i].energy += foodSources[k].eaten() * 50;
						}
					}
				}
			}
		}
	}

/***/ },
/* 1 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.random = random;
	// get random int value between min & max values
	function random(min, max) {
	  return Math.floor(Math.random() * (max - min + 1)) + min;
	}

	var FISH_WIDTH = exports.FISH_WIDTH = 25;
	var FISH_HEIGHT = exports.FISH_HEIGHT = 25;
	var FISH_COLOR = exports.FISH_COLOR = '#E09967';

	var SHARK_WIDTH = exports.SHARK_WIDTH = 45;
	var SHARK_HEIGHT = exports.SHARK_HEIGHT = 100;
	var SHARK_COLOR = exports.SHARK_COLOR = '#333333';

	var FOODSOURCE_WIDTH = exports.FOODSOURCE_WIDTH = 40;
	var FOODSOURCE_HEIGHT = exports.FOODSOURCE_HEIGHT = 40;
	var FOODSOURCE_COLOR = exports.FOODSOURCE_COLOR = '#F08080';

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Rectangle = __webpack_require__(3);

	var _Rectangle2 = _interopRequireDefault(_Rectangle);

	var _helpers = __webpack_require__(1);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Animal = function () {
	  function Animal(canvas, x, y, width, height) {
	    _classCallCheck(this, Animal);

	    this.canvasWidth = canvas.width;
	    this.canvasHeight = canvas.height;
	    this.x = x;
	    this.y = y;
	    this.width = width;
	    this.height = height;

	    this.position = new _Rectangle2.default(x, y, width, height);
	    this.energy = (0, _helpers.random)(100, 250);
	    this.movementAngle = (0, _helpers.random)(0, 3600) / 10;
	    this.speed = (0, _helpers.random)(50, 100) / 10;
	  }

	  _createClass(Animal, [{
	    key: 'setAngle',
	    value: function setAngle(angle) {
	      if (angle >= 0 && angle <= 360) {
	        this.movementAngle = angle;
	      }
	    }
	  }, {
	    key: 'rotationAngle',
	    value: function rotationAngle() {
	      return Math.PI / 180 * (this.movementAngle - 90);
	    }
	  }, {
	    key: 'move',
	    value: function move() {
	      var direction = {
	        x: Math.cos(this.rotationAngle()),
	        y: Math.sin(this.rotationAngle())
	      };
	      this.position.x += direction.x * this.speed;
	      this.position.y += direction.y * this.speed;

	      // check top
	      if (this.position.top < 0) {
	        this.movementAngle = (0, _helpers.random)(910, 2690) / 10;
	      }

	      // check bottom
	      if (this.position.bottom > this.canvasHeight) {
	        this.movementAngle = (0, _helpers.random)(2710, 4590) / 10;

	        if (this.movementAngle > 360) {
	          this.movementAngle = this.movementAngle - 360;
	        }
	      }

	      // check sides
	      if (this.position.left < 0 || this.position.right > this.canvasWidth) {
	        this.movementAngle = 360 - this.movementAngle;
	      }

	      this.energy--;
	    }
	  }, {
	    key: 'draw',
	    value: function draw(ctx, color) {
	      ctx.fillStyle = color;
	      ctx.fillRect(this.position.x, this.position.y, this.position.width, this.position.height);
	    }
	  }]);

	  return Animal;
	}();

	exports.default = Animal;

/***/ },
/* 3 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Rectangle = function () {
	  function Rectangle(x, y, width, height) {
	    _classCallCheck(this, Rectangle);

	    this.x = x || 0;
	    this.y = y || y;
	    this.width = width || 0;
	    this.height = height || 0;
	  }

	  _createClass(Rectangle, [{
	    key: "intersectsWith",
	    value: function intersectsWith(rectB) {
	      if (this.x < rectB.x + rectB.width && this.x + this.width > rectB.x && this.y < rectB.y + rectB.height && this.y + this.height > rectB.y) {
	        // collision detected!
	        return true;
	      }
	      return false;
	    }
	  }, {
	    key: "left",
	    get: function get() {
	      return this.x;
	    }
	  }, {
	    key: "top",
	    get: function get() {
	      return this.y;
	    }
	  }, {
	    key: "right",
	    get: function get() {
	      return this.x + this.width;
	    }
	  }, {
	    key: "bottom",
	    get: function get() {
	      return this.y + this.height;
	    }
	  }]);

	  return Rectangle;
	}();

	exports.default = Rectangle;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _Rectangle = __webpack_require__(3);

	var _Rectangle2 = _interopRequireDefault(_Rectangle);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var FoodSource = function () {
	  function FoodSource(x, y, width, height, energy) {
	    _classCallCheck(this, FoodSource);

	    this.position = new _Rectangle2.default(x, y, width, height);
	    this.energy = energy;
	  }

	  _createClass(FoodSource, [{
	    key: "eaten",
	    value: function eaten() {
	      if (this.energy >= 1) {
	        this.energy--;
	        return 1;
	      } else {
	        return 0;
	      }
	    }
	  }, {
	    key: "draw",
	    value: function draw(ctx, color) {
	      ctx.fillStyle = color;
	      ctx.fillRect(this.position.x, this.position.y, this.position.width, this.position.height);
	      ctx.fillStyle = "#fff";
	      ctx.fillText(this.energy, this.position.x + 10, this.position.y + 22);
	    }
	  }]);

	  return FoodSource;
	}();

	exports.default = FoodSource;

/***/ }
/******/ ]);